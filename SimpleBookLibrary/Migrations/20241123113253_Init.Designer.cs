// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleBookLibrary.Data;

#nullable disable

namespace SimpleBookLibrary.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241123113253_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("SimpleBookLibrary.Data.BookEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Author")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Created")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Publisher")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("PurchaseDateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("Updated")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("TB_Books", (string)null);
                });

            modelBuilder.Entity("SimpleBookLibrary.Data.BorrowHistoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("BookId")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("BorrowCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BorrowDateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BorrowerId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<long>("Created")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ReturnDateTime")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Updated")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("BorrowerId");

                    b.ToTable("TB_BorrowHistories", (string)null);
                });

            modelBuilder.Entity("SimpleBookLibrary.Data.BorrowerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<long>("Created")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("Updated")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TB_Borrowers", (string)null);
                });

            modelBuilder.Entity("SimpleBookLibrary.Data.DepartmentEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<long>("Created")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("Updated")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TB_Departments", (string)null);
                });

            modelBuilder.Entity("SimpleBookLibrary.Data.BookEntity", b =>
                {
                    b.HasOne("SimpleBookLibrary.Data.DepartmentEntity", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SimpleBookLibrary.Data.BorrowHistoryEntity", b =>
                {
                    b.HasOne("SimpleBookLibrary.Data.BookEntity", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.HasOne("SimpleBookLibrary.Data.BorrowerEntity", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Borrower");
                });
#pragma warning restore 612, 618
        }
    }
}
